{"ast":null,"code":"var _jsxFileName = \"/Users/Jed/bootcamp/setlist/client/src/components/ModalButton/index.js\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Songs from \"../Song\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./style.css\";\n\nconst ModalButton = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const showModal = e => {\n    e.preventDefault();\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Click to add songs before saving\", React.createElement(\"button\", {\n    className: \" btn btn-success float-right\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Add Songs\")), React.createElement(Modal, {\n    show: isOpen,\n    onHide: hideModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Add Songs\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Songs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \" btn btn-success\",\n    onClick: hideModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"save btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Save\"))));\n};\n\nexport default ModalButton;","map":{"version":3,"sources":["/Users/Jed/bootcamp/setlist/client/src/components/ModalButton/index.js"],"names":["React","Modal","Songs","ModalButton","isOpen","setIsOpen","useState","showModal","e","preventDefault","hideModal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,sCAAP;AACA,OAAO,aAAP;;AAIA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAAe,KAAf,CAA5B;;AAGA,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAKA,QAAMK,SAAS,GAAG,MAAM;AACtBL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,SACE,0CAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAoC;AAAQ,IAAA,SAAS,EAAC,8BAAlB;AAAiD,IAAA,OAAO,EAAEE,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApC,CAAF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,MAAb;AAAqB,IAAA,MAAM,EAAEM,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,CAJF,EAKE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,OAAO,EAAEA,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CALF,CAFF,CADF;AAgBD,CA7BD;;AA+BA,eAAeP,WAAf","sourcesContent":["import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Songs from \"../Song\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./style.css\";\n\n\n\nconst ModalButton = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n\n  const showModal = (e) => {\n    e.preventDefault();\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <><h6>Click to add songs before saving<button className=\" btn btn-success float-right\" onClick={showModal}>Add Songs</button></h6>\n\n      <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <Modal.Title>Add Songs</Modal.Title>\n        </Modal.Header>\n        <Modal.Body><Songs></Songs></Modal.Body>\n        <Modal.Footer>\n          <button className=\" btn btn-success\" onClick={hideModal}>Cancel</button>\n          <button className=\"save btn btn-success\">Save</button>\n        </Modal.Footer>\n      </Modal>\n    </>\n\n  );\n}\n\nexport default ModalButton;"]},"metadata":{},"sourceType":"module"}